
/*--------------------------------------------------------------
# Content
--------------------------------------------------------------*/
/*--------------------------------------------------------------
## List - archive pages with list of content
--------------------------------------------------------------*/

.bloc-item-list:last-of-type {
	margin-bottom: 3em;
}


/*--------------------------------------------------------------
## Grid

The idea is: just by using .grid class, we get a visual grid.
The expected content for the items in a grid:
- .post as the main container.
- .entry-title as the title.
--------------------------------------------------------------*/

/* 

 Mobile Styles for grid items
 
*/

.grid {
	margin: 0;
	padding: 0;
	/* Note: we reset padding, as the grid may be applied on UL or other styled items. */
}

.grid .item {
	background-color: #fff;
	padding: 0em;
	list-style: none;
}


.grid .news-item-link {
	text-decoration: none;
}

.grid .entry-title {
	margin: 0;
	padding: 0.5em;
	line-height: 1;
}

.grid .event-date {
	font-size: 0.8em;
	display: block;
	margin-top: 0.2em;
}

.grid .item:nth-of-type(2n+2) {
	background-color: $color__grey;
}


@media screen and (min-width: $small-value) {
	
	.grid {
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		grid-column-gap: 0;
		
	}
	/* reset grid colors */
	.grid .item:nth-of-type(2n+2) {
		background-color: #fff;
	}
	/* grid colors */
	.grid .item:nth-of-type(4n+3),
	.grid .item:nth-of-type(4n+2) {
		background-color: $color__grey;
	}
	.grid .item {
		padding: 0em;
	}
	.grid .entry-header {
		height: 100%;
	}
	.grid .item a {
		padding: 2.5em 2em;
		display: block;
		height: 100%;
	}
	.grid .entry-title {
		font-size: 1.5em;
		padding: 0;
		display: block;
	}
	
	.grid .item a:hover {
		background-color: $color__primary;
		color: #fff;
	}

}

@media screen and (min-width: $medium-value) {
	.grid {
		grid-template-columns: repeat(3, 1fr);
	}
	
	/* reset colors */
	.grid .item:nth-of-type(4n+3),
	.grid .item:nth-of-type(4n+2) {
		background-color: #fff;
	}
	
	/* grid colors */
	.grid .item:nth-of-type(4n+2),
	.grid .item:nth-of-type(4n+4) {
		background-color: $color__grey;
	}
}

@media screen and (min-width: $large-value) {
	.grid {
		grid-template-columns: repeat(4, 1fr);
	}
	/* reset colors */
	.grid .item:nth-of-type(4n+2),
	.grid .item:nth-of-type(4n+4) {
		background-color: #fff;
	}
	/* grid colors
	 * every instance of: 
	 2, 4, 
	 5, 7 (+8)
	 */
	.grid .item:nth-of-type(8n+2),
	.grid .item:nth-of-type(8n+4),
	.grid .item:nth-of-type(8n+5),
	.grid .item:nth-of-type(8n+7) {
		background-color: $color__grey;
	}
	
}

@media screen and (min-width: $extra-large-value) {
	.grid {
		grid-template-columns: repeat(5, 1fr);
	}
	/* reset colors */
	.grid .item:nth-of-type(8n+2),
	.grid .item:nth-of-type(8n+4),
	.grid .item:nth-of-type(8n+5),
	.grid .item:nth-of-type(8n+7) {
		background-color: #fff;
	}
	/* grid colors */
	.grid .item:nth-of-type(2n+2) {
		background-color: $color__grey;
	}
	
}

@media screen and (min-width: $ultra-large-value) {
	.grid {
		grid-template-columns: repeat(6, 1fr);
	}
	/* reset colors */
	.grid .item:nth-of-type(2n+2) {
		background-color: #fff;
	}
	/* grid colors
	 * every instance of: 
	 2, 4, 6,
	 7, 9, 11
	 */
	.grid .item:nth-of-type(12n+2),
	.grid .item:nth-of-type(12n+4),
	.grid .item:nth-of-type(12n+6),
	.grid .item:nth-of-type(12n+7),
	.grid .item:nth-of-type(12n+9),
	.grid .item:nth-of-type(12n+11)  {
		background-color: $color__grey;
	}
	
}

